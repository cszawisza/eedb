// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: parameters.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "parameters.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/io/zero_copy_stream_impl_lite.h>
// @@protoc_insertion_point(includes)

namespace protbuf {

void protobuf_ShutdownFile_parameters_2eproto() {
  delete Details::default_instance_;
  delete ParameterConfig::default_instance_;
  delete ParameterDetails::default_instance_;
  delete ParameterBasicInfo::default_instance_;
  delete Parameter::default_instance_;
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
void protobuf_AddDesc_parameters_2eproto_impl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#else
void protobuf_AddDesc_parameters_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#endif
  ::protobuf_AddDesc_common_2eproto();
  Details::default_instance_ = new Details();
  ParameterConfig::default_instance_ = new ParameterConfig();
  ParameterDetails::default_instance_ = new ParameterDetails();
  ParameterBasicInfo::default_instance_ = new ParameterBasicInfo();
  Parameter::default_instance_ = new Parameter();
  Details::default_instance_->InitAsDefaultInstance();
  ParameterConfig::default_instance_->InitAsDefaultInstance();
  ParameterDetails::default_instance_->InitAsDefaultInstance();
  ParameterBasicInfo::default_instance_->InitAsDefaultInstance();
  Parameter::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_parameters_2eproto);
}

#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AddDesc_parameters_2eproto_once_);
void protobuf_AddDesc_parameters_2eproto() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AddDesc_parameters_2eproto_once_,
                 &protobuf_AddDesc_parameters_2eproto_impl);
}
#else
// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_parameters_2eproto {
  StaticDescriptorInitializer_parameters_2eproto() {
    protobuf_AddDesc_parameters_2eproto();
  }
} static_descriptor_initializer_parameters_2eproto_;
#endif

// ===================================================================

#ifndef _MSC_VER
const int Details::kNameFieldNumber;
const int Details::kDescriptionFieldNumber;
const int Details::kCreationDateFieldNumber;
const int Details::kLastupdateFieldNumber;
#endif  // !_MSC_VER

Details::Details()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protbuf.Details)
}

void Details::InitAsDefaultInstance() {
}

Details::Details(const Details& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protbuf.Details)
}

void Details::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  creationdate_ = GOOGLE_ULONGLONG(0);
  lastupdate_ = GOOGLE_ULONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Details::~Details() {
  // @@protoc_insertion_point(destructor:protbuf.Details)
  SharedDtor();
}

void Details::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void Details::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Details& Details::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_parameters_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_parameters_2eproto();
#endif
  return *default_instance_;
}

Details* Details::default_instance_ = NULL;

Details* Details::New() const {
  return new Details;
}

void Details::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<Details*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 15) {
    ZR_(creationdate_, lastupdate_);
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_description()) {
      if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        description_->clear();
      }
    }
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Details::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:protbuf.Details)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_description;
        break;
      }

      // optional string description = 2;
      case 2: {
        if (tag == 18) {
         parse_description:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(25)) goto parse_creationDate;
        break;
      }

      // optional fixed64 creationDate = 3;
      case 3: {
        if (tag == 25) {
         parse_creationDate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &creationdate_)));
          set_has_creationdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(33)) goto parse_lastupdate;
        break;
      }

      // optional fixed64 lastupdate = 4;
      case 4: {
        if (tag == 33) {
         parse_lastupdate:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_FIXED64>(
                 input, &lastupdate_)));
          set_has_lastupdate();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protbuf.Details)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protbuf.Details)
  return false;
#undef DO_
}

void Details::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protbuf.Details)
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional string description = 2;
  if (has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->description(), output);
  }

  // optional fixed64 creationDate = 3;
  if (has_creationdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(3, this->creationdate(), output);
  }

  // optional fixed64 lastupdate = 4;
  if (has_lastupdate()) {
    ::google::protobuf::internal::WireFormatLite::WriteFixed64(4, this->lastupdate(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:protbuf.Details)
}

int Details::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string description = 2;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

    // optional fixed64 creationDate = 3;
    if (has_creationdate()) {
      total_size += 1 + 8;
    }

    // optional fixed64 lastupdate = 4;
    if (has_lastupdate()) {
      total_size += 1 + 8;
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Details::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Details*>(&from));
}

void Details::MergeFrom(const Details& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_description()) {
      set_description(from.description());
    }
    if (from.has_creationdate()) {
      set_creationdate(from.creationdate());
    }
    if (from.has_lastupdate()) {
      set_lastupdate(from.lastupdate());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Details::CopyFrom(const Details& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Details::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Details::Swap(Details* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(description_, other->description_);
    std::swap(creationdate_, other->creationdate_);
    std::swap(lastupdate_, other->lastupdate_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string Details::GetTypeName() const {
  return "protbuf.Details";
}


// ===================================================================

#ifndef _MSC_VER
const int ParameterConfig::kTypeFieldNumber;
const int ParameterConfig::kDefaultValueFieldNumber;
const int ParameterConfig::kMinValueFieldNumber;
const int ParameterConfig::kMaxValueFieldNumber;
const int ParameterConfig::kMinLengthFieldNumber;
const int ParameterConfig::kMaxLengthFieldNumber;
#endif  // !_MSC_VER

ParameterConfig::ParameterConfig()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protbuf.ParameterConfig)
}

void ParameterConfig::InitAsDefaultInstance() {
}

ParameterConfig::ParameterConfig(const ParameterConfig& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protbuf.ParameterConfig)
}

void ParameterConfig::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  type_ = 0;
  defaultvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  minvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  maxvalue_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  minlength_ = 0;
  maxlength_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParameterConfig::~ParameterConfig() {
  // @@protoc_insertion_point(destructor:protbuf.ParameterConfig)
  SharedDtor();
}

void ParameterConfig::SharedDtor() {
  if (defaultvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete defaultvalue_;
  }
  if (minvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete minvalue_;
  }
  if (maxvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete maxvalue_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ParameterConfig::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ParameterConfig& ParameterConfig::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_parameters_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_parameters_2eproto();
#endif
  return *default_instance_;
}

ParameterConfig* ParameterConfig::default_instance_ = NULL;

ParameterConfig* ParameterConfig::New() const {
  return new ParameterConfig;
}

void ParameterConfig::Clear() {
#define OFFSET_OF_FIELD_(f) (reinterpret_cast<char*>(      \
  &reinterpret_cast<ParameterConfig*>(16)->f) - \
   reinterpret_cast<char*>(16))

#define ZR_(first, last) do {                              \
    size_t f = OFFSET_OF_FIELD_(first);                    \
    size_t n = OFFSET_OF_FIELD_(last) - f + sizeof(last);  \
    ::memset(&first, 0, n);                                \
  } while (0)

  if (_has_bits_[0 / 32] & 63) {
    ZR_(type_, minlength_);
    if (has_defaultvalue()) {
      if (defaultvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        defaultvalue_->clear();
      }
    }
    if (has_minvalue()) {
      if (minvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        minvalue_->clear();
      }
    }
    if (has_maxvalue()) {
      if (maxvalue_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        maxvalue_->clear();
      }
    }
    maxlength_ = 0;
  }

#undef OFFSET_OF_FIELD_
#undef ZR_

  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ParameterConfig::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:protbuf.ParameterConfig)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 type = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &type_)));
          set_has_type();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_defaultValue;
        break;
      }

      // optional bytes defaultValue = 2;
      case 2: {
        if (tag == 18) {
         parse_defaultValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_defaultvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_minValue;
        break;
      }

      // optional bytes minValue = 3;
      case 3: {
        if (tag == 26) {
         parse_minValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_minvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_maxValue;
        break;
      }

      // optional bytes maxValue = 4;
      case 4: {
        if (tag == 34) {
         parse_maxValue:
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_maxvalue()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(40)) goto parse_minLength;
        break;
      }

      // optional int32 minLength = 5;
      case 5: {
        if (tag == 40) {
         parse_minLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &minlength_)));
          set_has_minlength();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(48)) goto parse_maxLength;
        break;
      }

      // optional int32 maxLength = 6;
      case 6: {
        if (tag == 48) {
         parse_maxLength:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxlength_)));
          set_has_maxlength();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protbuf.ParameterConfig)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protbuf.ParameterConfig)
  return false;
#undef DO_
}

void ParameterConfig::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protbuf.ParameterConfig)
  // required int32 type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->type(), output);
  }

  // optional bytes defaultValue = 2;
  if (has_defaultvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      2, this->defaultvalue(), output);
  }

  // optional bytes minValue = 3;
  if (has_minvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->minvalue(), output);
  }

  // optional bytes maxValue = 4;
  if (has_maxvalue()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      4, this->maxvalue(), output);
  }

  // optional int32 minLength = 5;
  if (has_minlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->minlength(), output);
  }

  // optional int32 maxLength = 6;
  if (has_maxlength()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->maxlength(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:protbuf.ParameterConfig)
}

int ParameterConfig::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->type());
    }

    // optional bytes defaultValue = 2;
    if (has_defaultvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->defaultvalue());
    }

    // optional bytes minValue = 3;
    if (has_minvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->minvalue());
    }

    // optional bytes maxValue = 4;
    if (has_maxvalue()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->maxvalue());
    }

    // optional int32 minLength = 5;
    if (has_minlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->minlength());
    }

    // optional int32 maxLength = 6;
    if (has_maxlength()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxlength());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParameterConfig::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ParameterConfig*>(&from));
}

void ParameterConfig::MergeFrom(const ParameterConfig& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_defaultvalue()) {
      set_defaultvalue(from.defaultvalue());
    }
    if (from.has_minvalue()) {
      set_minvalue(from.minvalue());
    }
    if (from.has_maxvalue()) {
      set_maxvalue(from.maxvalue());
    }
    if (from.has_minlength()) {
      set_minlength(from.minlength());
    }
    if (from.has_maxlength()) {
      set_maxlength(from.maxlength());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ParameterConfig::CopyFrom(const ParameterConfig& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterConfig::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ParameterConfig::Swap(ParameterConfig* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(defaultvalue_, other->defaultvalue_);
    std::swap(minvalue_, other->minvalue_);
    std::swap(maxvalue_, other->maxvalue_);
    std::swap(minlength_, other->minlength_);
    std::swap(maxlength_, other->maxlength_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ParameterConfig::GetTypeName() const {
  return "protbuf.ParameterConfig";
}


// ===================================================================

#ifndef _MSC_VER
const int ParameterDetails::kDescriptionFieldNumber;
#endif  // !_MSC_VER

ParameterDetails::ParameterDetails()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protbuf.ParameterDetails)
}

void ParameterDetails::InitAsDefaultInstance() {
}

ParameterDetails::ParameterDetails(const ParameterDetails& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protbuf.ParameterDetails)
}

void ParameterDetails::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  description_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParameterDetails::~ParameterDetails() {
  // @@protoc_insertion_point(destructor:protbuf.ParameterDetails)
  SharedDtor();
}

void ParameterDetails::SharedDtor() {
  if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete description_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ParameterDetails::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ParameterDetails& ParameterDetails::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_parameters_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_parameters_2eproto();
#endif
  return *default_instance_;
}

ParameterDetails* ParameterDetails::default_instance_ = NULL;

ParameterDetails* ParameterDetails::New() const {
  return new ParameterDetails;
}

void ParameterDetails::Clear() {
  if (has_description()) {
    if (description_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
      description_->clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ParameterDetails::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:protbuf.ParameterDetails)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string description = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_description()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protbuf.ParameterDetails)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protbuf.ParameterDetails)
  return false;
#undef DO_
}

void ParameterDetails::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protbuf.ParameterDetails)
  // optional string description = 1;
  if (has_description()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->description(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:protbuf.ParameterDetails)
}

int ParameterDetails::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string description = 1;
    if (has_description()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->description());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParameterDetails::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ParameterDetails*>(&from));
}

void ParameterDetails::MergeFrom(const ParameterDetails& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_description()) {
      set_description(from.description());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ParameterDetails::CopyFrom(const ParameterDetails& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterDetails::IsInitialized() const {

  return true;
}

void ParameterDetails::Swap(ParameterDetails* other) {
  if (other != this) {
    std::swap(description_, other->description_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ParameterDetails::GetTypeName() const {
  return "protbuf.ParameterDetails";
}


// ===================================================================

#ifndef _MSC_VER
const int ParameterBasicInfo::kIdFieldNumber;
const int ParameterBasicInfo::kNameFieldNumber;
const int ParameterBasicInfo::kSymbolFieldNumber;
#endif  // !_MSC_VER

ParameterBasicInfo::ParameterBasicInfo()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protbuf.ParameterBasicInfo)
}

void ParameterBasicInfo::InitAsDefaultInstance() {
}

ParameterBasicInfo::ParameterBasicInfo(const ParameterBasicInfo& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protbuf.ParameterBasicInfo)
}

void ParameterBasicInfo::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  id_ = 0u;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  symbol_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ParameterBasicInfo::~ParameterBasicInfo() {
  // @@protoc_insertion_point(destructor:protbuf.ParameterBasicInfo)
  SharedDtor();
}

void ParameterBasicInfo::SharedDtor() {
  if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete name_;
  }
  if (symbol_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete symbol_;
  }
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
  }
}

void ParameterBasicInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ParameterBasicInfo& ParameterBasicInfo::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_parameters_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_parameters_2eproto();
#endif
  return *default_instance_;
}

ParameterBasicInfo* ParameterBasicInfo::default_instance_ = NULL;

ParameterBasicInfo* ParameterBasicInfo::New() const {
  return new ParameterBasicInfo;
}

void ParameterBasicInfo::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    id_ = 0u;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        name_->clear();
      }
    }
    if (has_symbol()) {
      if (symbol_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
        symbol_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool ParameterBasicInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:protbuf.ParameterBasicInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required uint32 id = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint32, ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }

      // optional string name = 2;
      case 2: {
        if (tag == 18) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(26)) goto parse_symbol;
        break;
      }

      // optional string symbol = 3;
      case 3: {
        if (tag == 26) {
         parse_symbol:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_symbol()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protbuf.ParameterBasicInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protbuf.ParameterBasicInfo)
  return false;
#undef DO_
}

void ParameterBasicInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protbuf.ParameterBasicInfo)
  // required uint32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->id(), output);
  }

  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->name(), output);
  }

  // optional string symbol = 3;
  if (has_symbol()) {
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      3, this->symbol(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:protbuf.ParameterBasicInfo)
}

int ParameterBasicInfo::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required uint32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt32Size(
          this->id());
    }

    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional string symbol = 3;
    if (has_symbol()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->symbol());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ParameterBasicInfo::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const ParameterBasicInfo*>(&from));
}

void ParameterBasicInfo::MergeFrom(const ParameterBasicInfo& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_symbol()) {
      set_symbol(from.symbol());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void ParameterBasicInfo::CopyFrom(const ParameterBasicInfo& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ParameterBasicInfo::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ParameterBasicInfo::Swap(ParameterBasicInfo* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(symbol_, other->symbol_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string ParameterBasicInfo::GetTypeName() const {
  return "protbuf.ParameterBasicInfo";
}


// ===================================================================

#ifndef _MSC_VER
const int Parameter::kBasicFieldNumber;
const int Parameter::kDetailsFieldNumber;
const int Parameter::kConfigFieldNumber;
#endif  // !_MSC_VER

Parameter::Parameter()
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  // @@protoc_insertion_point(constructor:protbuf.Parameter)
}

void Parameter::InitAsDefaultInstance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  basic_ = const_cast< ::protbuf::ParameterBasicInfo*>(
      ::protbuf::ParameterBasicInfo::internal_default_instance());
#else
  basic_ = const_cast< ::protbuf::ParameterBasicInfo*>(&::protbuf::ParameterBasicInfo::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  details_ = const_cast< ::protbuf::Details*>(
      ::protbuf::Details::internal_default_instance());
#else
  details_ = const_cast< ::protbuf::Details*>(&::protbuf::Details::default_instance());
#endif
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  config_ = const_cast< ::protbuf::ParameterConfig*>(
      ::protbuf::ParameterConfig::internal_default_instance());
#else
  config_ = const_cast< ::protbuf::ParameterConfig*>(&::protbuf::ParameterConfig::default_instance());
#endif
}

Parameter::Parameter(const Parameter& from)
  : ::google::protobuf::MessageLite() {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:protbuf.Parameter)
}

void Parameter::SharedCtor() {
  _cached_size_ = 0;
  basic_ = NULL;
  details_ = NULL;
  config_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parameter::~Parameter() {
  // @@protoc_insertion_point(destructor:protbuf.Parameter)
  SharedDtor();
}

void Parameter::SharedDtor() {
  #ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  if (this != &default_instance()) {
  #else
  if (this != default_instance_) {
  #endif
    delete basic_;
    delete details_;
    delete config_;
  }
}

void Parameter::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const Parameter& Parameter::default_instance() {
#ifdef GOOGLE_PROTOBUF_NO_STATIC_INITIALIZER
  protobuf_AddDesc_parameters_2eproto();
#else
  if (default_instance_ == NULL) protobuf_AddDesc_parameters_2eproto();
#endif
  return *default_instance_;
}

Parameter* Parameter::default_instance_ = NULL;

Parameter* Parameter::New() const {
  return new Parameter;
}

void Parameter::Clear() {
  if (_has_bits_[0 / 32] & 7) {
    if (has_basic()) {
      if (basic_ != NULL) basic_->::protbuf::ParameterBasicInfo::Clear();
    }
    if (has_details()) {
      if (details_ != NULL) details_->::protbuf::Details::Clear();
    }
    if (has_config()) {
      if (config_ != NULL) config_->::protbuf::ParameterConfig::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->clear();
}

bool Parameter::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  ::google::protobuf::io::StringOutputStream unknown_fields_string(
      mutable_unknown_fields());
  ::google::protobuf::io::CodedOutputStream unknown_fields_stream(
      &unknown_fields_string);
  // @@protoc_insertion_point(parse_start:protbuf.Parameter)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .protbuf.ParameterBasicInfo basic = 1;
      case 1: {
        if (tag == 10) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_basic()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_details;
        break;
      }

      // required .protbuf.Details details = 2;
      case 2: {
        if (tag == 18) {
         parse_details:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_details()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(34)) goto parse_config;
        break;
      }

      // required .protbuf.ParameterConfig config = 4;
      case 4: {
        if (tag == 34) {
         parse_config:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_config()));
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormatLite::SkipField(
            input, tag, &unknown_fields_stream));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:protbuf.Parameter)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:protbuf.Parameter)
  return false;
#undef DO_
}

void Parameter::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:protbuf.Parameter)
  // required .protbuf.ParameterBasicInfo basic = 1;
  if (has_basic()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      1, this->basic(), output);
  }

  // required .protbuf.Details details = 2;
  if (has_details()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      2, this->details(), output);
  }

  // required .protbuf.ParameterConfig config = 4;
  if (has_config()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessage(
      4, this->config(), output);
  }

  output->WriteRaw(unknown_fields().data(),
                   unknown_fields().size());
  // @@protoc_insertion_point(serialize_end:protbuf.Parameter)
}

int Parameter::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .protbuf.ParameterBasicInfo basic = 1;
    if (has_basic()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->basic());
    }

    // required .protbuf.Details details = 2;
    if (has_details()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->details());
    }

    // required .protbuf.ParameterConfig config = 4;
    if (has_config()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->config());
    }

  }
  total_size += unknown_fields().size();

  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parameter::CheckTypeAndMergeFrom(
    const ::google::protobuf::MessageLite& from) {
  MergeFrom(*::google::protobuf::down_cast<const Parameter*>(&from));
}

void Parameter::MergeFrom(const Parameter& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_basic()) {
      mutable_basic()->::protbuf::ParameterBasicInfo::MergeFrom(from.basic());
    }
    if (from.has_details()) {
      mutable_details()->::protbuf::Details::MergeFrom(from.details());
    }
    if (from.has_config()) {
      mutable_config()->::protbuf::ParameterConfig::MergeFrom(from.config());
    }
  }
  mutable_unknown_fields()->append(from.unknown_fields());
}

void Parameter::CopyFrom(const Parameter& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parameter::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_basic()) {
    if (!this->basic().IsInitialized()) return false;
  }
  if (has_details()) {
    if (!this->details().IsInitialized()) return false;
  }
  if (has_config()) {
    if (!this->config().IsInitialized()) return false;
  }
  return true;
}

void Parameter::Swap(Parameter* other) {
  if (other != this) {
    std::swap(basic_, other->basic_);
    std::swap(details_, other->details_);
    std::swap(config_, other->config_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.swap(other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::std::string Parameter::GetTypeName() const {
  return "protbuf.Parameter";
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace protbuf

// @@protoc_insertion_point(global_scope)
