option optimize_for = LITE_RUNTIME;
package pb;

import public "parameters.proto";
import public "common.proto";

message CategoryReq{
// USER MESSAGE STRUCTURE 

  oneof action{
    Add add = 2;
    Remove remove = 5;
    Modify modify = 6;
    Get  get = 7;
    ModifyParameters modifyParameters= 8;
  }
 
// INTERNAL MESSAGES ///////////////
  message Add{
    required string name =2;
    required uint32 parent_id = 3;
    optional string description = 4;
    optional bool returningId = 5 [default = false];
  }
  
  message Get{
//    message Where{
//        optional bool   all_groups    = 1 [default = true];
//        repeated uint32 get_only      = 2; // filter to those ID's
//        optional bool   with_children = 3 [default = true];
//    }
//    optional bool  get_ids           = 1  [default = true]; // both parent and child
//    optional bool  get_name          = 2  [default = true];
//    optional bool  get_description   = 3  [default = true];
//    optional bool  get_statistics    = 4  [default = false];
//   //optional bool get_image         = 5  [default = false];
//    optional bool  get_files         = 6  [default = false]; // only assosiated metadata, without filedata
//    optional Where where = 13;
  }
  
  message Remove{
/// this message should be modified for providing more options
//    required uint32 group_id        = 1;
//    optional bool remove_items      = 3 [default = false];
//    optional bool only_hide         = 4 [default = true]; // only sets goup as hidden
//    oneof remove_mode{
//      bool  remove_children   = 2;
//      int32 move_children_to  = 5; // instruct serwer to move child groups to this id
//      bool  hide_children     = 6;
//    }
  }
  
  message Modify{
//    optional string name = 5;
//    optional string desc = 6;
//    optional int32 parent_id = 7;
  }
  
  message ModifyParameters{
//    message Modify{
//      required bool add = 1;
//      required uint32 parameter_id = 2;
//      required uint32 group_id = 3;
//      optional bool apply_to_children = 4;
//    }
    
//    repeated Modify modify = 1;
  }
}

message CategoryRes{
    enum Replay{
        OK = 0;
        AddSuccesful =1;
        InvalidParentId = 2;
        MissingParentId = 3;
        InvalidName = 4;
        MissingName = 5;
        CategoryExists = 6;
    }

    optional Replay code = 1 [default = OK];
    optional uint32 id = 2;
    optional string name =3;
    optional uint32 parent_id = 4;
    optional string description = 5;
}
