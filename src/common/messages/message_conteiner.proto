option optimize_for = LITE_RUNTIME;
package pb;
import public "common.proto";

import public "user.proto";
import public "inventory.proto";
import public "item.proto";
import public "group.proto";


/// message used for sending back code of operation 
/// (operation succes or error)

enum MsgCoding{
  msgProtbuf = 1;
  msgBin = 2;
  msgJson = 3;
}

// MsgTypeID mast be unique and same as in client request and server response messages
enum MsgTypeId{
  Msg_unknown = 0;
  Msg_Server_Response = 100; // dummy responses (unknown messages etc.)
  
  Msg_User_req = 12; // Login, modify, delete etc.
  Msg_User_res = 13;
}

enum ServerErrorCodes{
  No_Error = 0;
  Error_MsgUnknown = 1;
  Error_AccesDeny = 2;
  Error_UnhandledMessage = 3;
  Error_NoActionChoosen = 4;
}

message ClientRequests{
  repeated ClientRequest request=1;
}

message ClientRequest{
  optional uint32	requestId	= 1 [default = 1];
//  required MsgCoding	msgCoding 	= 3 [default = msgProtbuf]; // type that is stored in data field
//  optional MsgTypeId	msgTypeId 	= 4; // used only for not protbuf type messages
//  optional bool		compressed	= 5; // is data compressed
  
  oneof data {
//    bytes binary_msg = 10;
//    string json_msg = 11;
    pb.MsgUserRequest             msgUserReq = 12;
    pb.MsgInventoryRequest    msgInventoryReq = 13;
    pb.MsgItemRequest         msgItemReq = 14;
    pb.MsgGroupRequest        msgGroupReq = 15;
    pb.MsgParameterRequest    msgParameterReq = 16;
  }
}

message ServerResponses{
  repeated ServerResponse response = 1;
}

message ServerResponse {
  optional ServerErrorCodes code        = 1 [default = No_Error];
  optional uint32	responseId	= 2 [default = 0]; 
//  required MsgCoding	msgCoding 	= 3 [default = msgProtbuf]; // type that is stored in data field
//  optional MsgTypeId	msgTypeId 	= 4; // used only for not protbuf type messages
//  optional bool		compressed	= 5; // is data compressed
  
  oneof data {
//    bytes binary_msg = 10;
//    string json_msg = 11;
    pb.MsgUserResponse            msgUserRes = 12;
    pb.MsgInventoryResponse   msgInventoryRes = 13;
    pb.MsgItemResponse        msgItemRes = 14;
    pb.MsgGroupResponse       msgGroupRes = 15;
    pb.MsgParameterResponse   msgParameterRes = 16;
    
//    ServerResponse msgServerResponse = 1000;
  }
}




