option optimize_for = LITE_RUNTIME;
package pb;

import public "stats.proto";
import public "common.proto";
  
message UserReq{
// USER MESSAGE STRUCTURE 

  oneof action{
    Add add = 2;
    Login login = 3;
    Logout logout = 4; 
    Remove remove = 5;
    Modify modify = 6;
    Get get = 7;
    ChangePasswd changePasswd = 8;
  }

// INTERNAL MESSAGES ///////////////
  message Credentials{
    oneof login_id{
      uint32 id = 1;
      string nickname = 2;
      string email = 3;
    }
  }

// ACTION MESSAGES /////////////////////
  message Login{
    required Credentials cred = 1;
    required string password = 2;
    optional string sys_info = 3;
  }

  message Logout{
    // optional bool save_state = 1;
  }
  
  message Add{
    required UserBasic basic = 1;
    required string password = 3;
    optional pb.Acl acl = 4;
    optional UserDetails details = 5;
  }
  
  message Remove{
    required Credentials cred = 1;
    optional string password = 2;
    optional bool remove_config = 4;
    optional bool remove_userdata = 5;
  }
  
  message Modify{
    optional string email = 1;
    optional string first_name = 2;
    optional string last_name = 3;
    optional string address = 4;
    optional bytes phone_number = 5;
    optional bytes description = 6;
    optional bytes avatar = 7;
    optional pb.Acl acl = 8;
  }

  message Get {
    message Where {
      optional bool self = 1; // check only logged user
      optional int32 uid = 2; // check this user uid
//      optional int32 group = 3; // get all from group
    }
    optional bool uid = 1;
//    optional bool first_name = 2;
//    optional bool last_name = 3;
    optional bool address = 4;
    optional bool phone_number = 5;
    optional bool description = 6;
    optional bool avatar = 7;
//    optional bool history = 8;
    optional Where where = 9;
  }

  message ChangePasswd{
    oneof Where{
        bool self = 1;
        int32 uid = 2;
    }
    optional string old = 3;
    optional string new = 4;
//    optional bool resetPasswd = 5;
  }
}

message UserRes {
  enum Reply{
    LoginPass = 1;
    LoginDeny = 2;

    LogoutOk = 3;

    EmailAddressToLong = 4;
    EmailNotValidate = 5;
    UserNameToLong = 6;

    UserAlreadyExists=7;
    UserAddOk = 8;
    UserDontExist = 9;
    UserOnline = 10;

    PasswordToShort = 11;

    AddressToLong = 12;
    DescriptionToLong = 13;
    BadPhoneNumber = 14;

    MissingRequiredField = 15;
  }

  repeated Reply code = 1;

  optional UserBasic basic = 2;
  optional UserConfig config = 3;
  optional UserStats stats = 4;
  optional UserDetails details = 5;
}

message UserBasic{
  optional int32 id = 7;
  required string email = 1;
  required string nickname = 2;
//  optional string first_name = 3;
//  optional string last_name = 4;
  optional bytes description = 5; 
  optional bytes avatar = 6;
}

message UserDetails{
  optional string address = 3;
  optional bytes phone_number = 4;
}

message UserConfig{
  optional uint32 last_storage_id = 1;
  optional uint32 last_group_id = 2;
  optional uint32 last_item_id = 3;
  optional uint32 last_parameter_id = 4;
  // introduce more user optionas, and ask them at user creation time
  // e.g. save login history? etc.
}

message UserStats{
  optional uint32 magazineCount = 1; // number of magazines
  optional uint32 totalNumOfElements=2; // number of elements
  optional uint32 totalNumOfUniqueElements = 3; // number of different elements
  optional uint32 totalNumOfRequests = 4; // number of requests to server
  optional uint32 totalModifiedItems = 5; // total number of modified elements by user
  optional uint32 totalAddItems = 6; // total items that user add to groups
  optional DateTime last_login = 7;  // last login date
  optional DateTime registration_date = 8; // registration date
}
